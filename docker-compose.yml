services:

  loki:
    image: grafana/loki:3.4.1
    container_name: loki
    hostname: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./infra_monitoring_code/loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:3.4.1
    container_name: promtail
    hostname: promtail
    restart: unless-stopped
    ports:
      - "9080:9080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/var/log:ro
      - ./infra_monitoring_code/promtail/promtail-config.yaml:/etc/promtail/config.yaml
    depends_on:
      - loki
    command: -config.file=/etc/promtail/config.yaml

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    ports:
      - "3001:3001"
    depends_on:
      - prometheus
      - loki
    volumes:
      - ./infra_monitoring_code/grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
      - ./infra_monitoring_code/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./infra_monitoring_code/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      GF_SERVER_HTTP_PORT: 3001


  alertmanager:
    image: prom/alertmanager:v0.28.1
    container_name: alertmanager
    hostname: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./infra_monitoring_code/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:v3.2.1
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./infra_monitoring_code/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./infra_monitoring_code/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - ./infra_monitoring_code/prometheus/recording_rules.yml:/etc/prometheus/recording_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'


  mongo-prom-exporter:
    image: percona/mongodb_exporter:0.43.1
    container_name: mongo-prom-exporter
    hostname: mongo-prom-exporter
    restart: unless-stopped
    # ports:
    #   - "9216:9216"
    command:
      - '--mongodb.uri=${MONGODB_URI}'
    depends_on:
      - mongodb

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:1.4.0
    container_name: nginx-prometheus-exporter
    hostname: nginx-prometheus-exporter
    restart: unless-stopped
    # ports:
    #   - "9113:9113"
    depends_on:
      - nginx
    command: '--nginx.scrape-uri=http://nginx:80/stub_status'


  prometheus-node-exporter:
    image: prom/node-exporter:v1.9.0
    container_name: prometheus-node-exporter
    hostname: prometheus-node-exporter
    restart: unless-stopped
    # ports:
    #   - "9100:9100"
    depends_on:
      - prometheus




  mongodb:
    image: mongo:4.4
    # image: mongo:8.0.4
    container_name: mongodb
    hostname: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb


  nodeapi:
    container_name: nodeapi
    hostname: nodeapi
    build:
      context: .
    restart: always
    depends_on:
      - mongodb
    environment:
      MONGODB_URI: ${MONGODB_URI}
      PORT: ${PORT}
      MONGO_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      NODE_ENV: ${NODE_ENV}


  nginx:
    container_name: nginx
    hostname: nginx
    depends_on:
      - nodeapi
    image: nginx:1.27.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d


volumes:
  mongodb_data:
  mongodb_config:
  grafana_data:
  prometheus_data:
  alertmanager_data:
  loki_data: